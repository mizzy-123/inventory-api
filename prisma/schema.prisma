// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @unique @default(uuid())
  email      String   @unique
  username   String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  roles Role?

  user_data UserData?
  // history_warehouse HistoryWarehouse[]

  inbound  Inbound[]
  outbound Outbound[]

  @@map("users")
}

model UserData {
  id   BigInt  @id @default(autoincrement())
  foto String?

  users    User   @relation(fields: [users_id], references: [id], onDelete: Cascade)
  users_id String @unique

  @@map("user_data")
}

model Role {
  id      BigInt  @id @default(autoincrement())
  admin   Boolean @default(false)
  manager Boolean @default(false)
  staff   Boolean @default(false)

  users    User   @relation(fields: [users_id], references: [id], onDelete: Cascade)
  users_id String @unique

  @@map("roles")
}

model Supplier {
  id           BigInt   @id @default(autoincrement())
  name         String   @db.VarChar(100)
  contact_info String   @db.VarChar(255)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  item Item[]

  @@map("supplier")
}

model Item {
  id         BigInt   @id @default(autoincrement())
  name       String   @db.VarChar(100)
  code       String   @unique
  quantity   Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  supplier    Supplier @relation(fields: [supplier_id], references: [id], onDelete: Restrict)
  supplier_id BigInt

  inventory Inventory[]
  // history_warehouse HistoryWarehouse[]

  inbound  Inbound[]
  outbound Outbound[]

  @@map("item")
}

model Inventory {
  id         BigInt   @id @default(autoincrement())
  quantity   Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  warehouse    Warehouse @relation(fields: [warehouse_id], references: [id], onDelete: Cascade)
  warehouse_id BigInt

  item    Item   @relation(fields: [item_id], references: [id], onDelete: Cascade)
  item_id BigInt

  @@map("inventory")
}

model Warehouse {
  id         BigInt   @id @default(autoincrement())
  name       String   @db.VarChar(100)
  location   String   @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  inventory Inventory[]
  // history_warehouse HistoryWarehouse[]

  inbound  Inbound[]
  outbound Outbound[]

  @@map("warehouse")
}

// model HistoryWarehouse {
//   id           BigInt @id @default(autoincrement())
//   item_id      BigInt
//   warehouse_id BigInt
//   users_id     String
//   quantity     Int
//   description  String @db.VarChar(255)

//   item      Item      @relation(fields: [item_id], references: [id], onDelete: Cascade)
//   warehouse Warehouse @relation(fields: [warehouse_id], references: [id], onDelete: Cascade)
//   users     User      @relation(fields: [users_id], references: [id], onDelete: Cascade)

//   @@map("history_warehouse")
// }

model Inbound {
  id           BigInt    @id @default(autoincrement())
  item_id      BigInt
  item         Item      @relation(fields: [item_id], references: [id], onDelete: Cascade)
  users_id     String
  users        User      @relation(fields: [users_id], references: [id], onDelete: Cascade)
  warehouse_id BigInt
  warehouse    Warehouse @relation(fields: [warehouse_id], references: [id], onDelete: Cascade)
  quantity     Int
  description  String    @db.VarChar()
  createdAt    DateTime  @default(now())

  @@map("inbound")
}

model Outbound {
  id           BigInt    @id @default(autoincrement())
  item_id      BigInt
  item         Item      @relation(fields: [item_id], references: [id], onDelete: Cascade)
  users_id     String
  users        User      @relation(fields: [users_id], references: [id], onDelete: Cascade)
  warehouse_id BigInt
  warehouse    Warehouse @relation(fields: [warehouse_id], references: [id], onDelete: Cascade)
  quantity     Int
  description  String    @db.VarChar(255)
  createdAt    DateTime  @default(now())

  @@map("outbound")
}
